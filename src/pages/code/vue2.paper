<template class='doc-view'>
    <h2 id='fixed-top'>
        Vue2
    </h2>
    <h3 id='fixed-components'>
        动态组件
    </h3>
    <p>
        有时候我们可能需要动态确定一个地方使用哪个组件，比如根据返回的数据确定当前是下拉还是日历组件，那就可以借助这个组件：
    </p>
    <pre q-code><component v-bind:is="yourComp"></component></pre>
    <p>
        yourComp是什么？就是一个vue组件。我们来说明一种特殊情况。
    </p>
    <pre q-code>
export default {
    template:'字符串模板'
}</pre>
    <p>
        上面的内容是写在我们自定义的组件yourComp.js中的，如何导入使用：
    </p>
    <pre q-code>import yourComp from "./yourComp";</pre>
    <p>
        像上面那样导入即可被一开始演示的component使用了。可是这样好像也没有什么特别的？
    </p>
    <p>
        那我们把yourComp.js文件稍微改造一下：
    </p>
    <pre q-code>
export default function (templateData) {
    return {
        template: '根据templateData拼接的字符串模板'
    };
};
    </pre>
    <p>
        同样，我们导入后也需要多添加一步进行处理：
    </p>
    <pre q-code>
import yourCompFactory from "./yourComp";
// 第二句可以在任意一个地方执行，包括请求回调中
yourComp=yourCompFactory(templateData);
    </pre>
    <p>
        看出来了吗？改造以后，我们就可以根据实际需要，动态调整生成的组件。
    </p>
    <h3 id='fixed-nosync'>
        视图和model数据不同步问题
    </h3>
    <p>
        有时候在指令里面通过jquery修改了input的数据，不过Vue并不会知道，这时候，你可以通过触发输入框input事件，让Vue发现数据改变了：
    </p>
    <pre q-code>$("input").trigger("input");</pre>
</template>
<script>
    import fixedScroll from '../../services/fixedScroll.js';
    export default {
        mounted() {
            this.changeActive('menu-2', 'vue2');
            fixedScroll(document.getElementById('root'), 44);
        }
    };
</script>
