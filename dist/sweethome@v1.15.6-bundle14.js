(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{103:function(a,e,d){var p=d(104);"string"==typeof p&&(p=[[a.i,p,""]]),p.locals&&(a.exports=p.locals);(0,d(2).default)("data-quickpaper-fad1ada2",p,!0)},104:function(a,e,d){(a.exports=d(1)(!1)).push([a.i,"",""])},146:function(a,e,d){"use strict";d.r(e);var p={};d(103);p.render=function(a){return a("div",{class:"doc-view",quickpaper:"","data-quickpaper-fad1ada2":""},[a("h2",{"data-quickpaper-fad1ada2":""},["Angular1一些有用的笔记（数据格式化、同步问题和表单校验等）"]),a("h3",{"data-quickpaper-fad1ada2":""},["视图和model之间的数据格式化"]),a("p",{"data-quickpaper-fad1ada2":""},["类似过滤器的功能，在写指令的时候，我们可能希望输入框在页面显示的是益于阅读的，而获取值的时候获取的是简洁的，因此你可能会需要在link中使用下面的方法来实现这个功能。"]),a("h4",{"data-quickpaper-fad1ada2":""},["1.model到view的数据格式化："]),a("pre",{"q-code":"","data-quickpaper-fad1ada2":""},["ctrl.$formatters.unshift(function(input) {});"]),a("h4",{"data-quickpaper-fad1ada2":""},["2.view到model的数据格式化："]),a("pre",{"q-code":"","data-quickpaper-fad1ada2":""},["ctrl.$parsers.unshift(function(input) {});"]),a("p",{"data-quickpaper-fad1ada2":""},["上面的$formatters和$parsers就是二个队列，视图到model和model到视图，会方便经过里面定义的方法的过滤，有点类似管道流，最后流到目的地。"]),a("p",{class:"warn","data-quickpaper-fad1ada2":""},['温馨提示：别忘了设置类似require: "?ngModel"这样的语句去查找控制器。']),a("h3",{"data-quickpaper-fad1ada2":""},["视图和model数据不同步问题"]),a("p",{"data-quickpaper-fad1ada2":""},["有时候在指令里面通过jquery修改了input的数据，不过angularjs并不会知道，这时候，你有如下方法可以选择。"]),a("h4",{"data-quickpaper-fad1ada2":""},["1.触发输入框change改变，让Angularjs发现数据改变了，从而去调用$setViewValue(value),同步数据："]),a("pre",{"q-code":"","data-quickpaper-fad1ada2":""},['$("input").trigger("change");']),a("h4",{"data-quickpaper-fad1ada2":""},["2.直接手动触发同步value到viewValue和modelValue中的行为："]),a("pre",{"q-code":"","data-quickpaper-fad1ada2":""},["ctrl.$setViewValue($scope.info);"]),a("h3",{"data-quickpaper-fad1ada2":""},["表单控制"]),a("p",{"data-quickpaper-fad1ada2":""},["在自定义form表单的时候，或者新写一个指令来控制输入框输入的时候，为了统一控制表单输入是否合法（最后都通过$scope[表单名称]的方法来获取表单情况），你可以通过下面的方法来修改输入框是否合法："]),a("pre",{"q-code":"","data-quickpaper-fad1ada2":""},["ctrl.$setValidity(errorType, boolean);//errorType表示错误类别，可以自定义"])])};e.default=p}}]);